name: Build and Deploy to k8s
env:
  ECR_REGISTRY: 664978555709.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPO: xentrail 
  APP_VERSION: v1
  AWS_REGION: us-east-1 
  EKS_CLUSTER: xentrail
  DEPLOYMENT_NAME: xentrail-webapp
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the v3 branch
  push:
    name: Build Artifacts
    branches: [ v1 ]
  workflow_dispatch:
jobs:
  build:
    name: Build artifacts and push to repo 
    runs-on: xentrail

    steps:
      - uses: actions/checkout@v2

      - name: Authenitcate to ECR 
        run: sudo aws ecr get-login-password --region ${AWS_REGION} | sudo docker login --username AWS --password-stdin ${ECR_REGISTRY}
 
      - name: Build Docker image
        run: sudo docker build -t ${ECR_REPO}:${APP_VERSION} .

      - name: Tag Image 
        run: sudo docker tag ${ECR_REPO}:${APP_VERSION} ${ECR_REGISTRY}/${ECR_REPO}:${APP_VERSION}

      - name: Push to ECR 
        run: sudo docker push ${ECR_REGISTRY}/${ECR_REPO}:${APP_VERSION}
    
  checkvulns:
    name: Check Vulns 
    needs: build
    runs-on: xentrail
    steps:
      - name: Check if there are critical vulns in the docker image 
        run: |
          IMAGE_DIGEST=$(aws --region ${AWS_REGION} ecr describe-images --repository-name ${ECR_REPO} --image-ids imageTag=${APP_VERSION} --query imageDetails[0].imageDigest)
          FINDINGS=$(aws --region ${AWS_REGION} ecr describe-image-scan-findings  --repository-name ${ECR_REPO} --image-id imageDigest=${IMAGE_DIGEST})
          HIGH_FINDINGS=$(echo $FINDINGS | jq '.imageScanFindings.findingSeverityCounts.HIGH')
          CRITICAL_FINDINGS=$(echo $FINDINGS | jq '.imageScanFindings.findingSeverityCounts.CRITICAL')
          if [ -n ${CRITICAL_FINDINGS} ]; then echo "No Critical Vulns found. Fix High Vulns if there are anoy. Found ${HIGH_FINDINGS}" High Vulnerabilities in this Image. ;else echo "Failing Pipeline as Critical Vulnerabilities found " && exit 1; fi 

  deploy:
    name: Deploy to k8s
    needs: checkvulns
    runs-on: xentrail
    steps:
      - name: Deploy to K8s  
        run: | 
          aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER}
          kubectl apply -f ./webapp

  rollingupdate:
    name: Perform Rolling update
    needs: deploy
    runs-on: xentrail
    steps:
      - name: Trigger rolling update  
        run: |
          NAMESPACE=$(cat */*.yaml | grep namespace | cut -d ":" -f2 | head -1)
          kubectl -n ${NAMESPACE} patch deployment ${DEPLOYMENT_NAME} -p  "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"
          echo "Waiting for 30 seconds"
          sleep 30
          for check in {1..10};do 
          ROLLOUT_STATUS=$(kubectl -n ${NAMESPACE} rollout status deployment ${DEPLOYMENT_NAME})
          if [[ "$ROLLOUT_STATUS" == *"successfully"* ]]; then
            echo "Roll Out succesfull"
            break 
          else
            echo "Wait for a minute"
            sleep 30
          fi
          if [ $check -eq 10 ]
          then 
          echo "Roll out failed"
          exit 1
          fi
          done
  validate:
    name: Validate the application
    needs: rollingupdate
    runs-on: xentrail
    steps:
      - name: Check if application is up or not 
        run: | 
          NAMESPACE=$(cat */*.yaml | grep namespace | cut -d ":" -f2 | head -1)
          ENDPOINT=$(kubectl -n ${NAMESPACE} get ing | awk {'print $4'} | tail -1 )
          STATUS_CODE=$(curl --silent  -I ${ENDPOINT} | head -1 | awk {'print $2'})
          if [ $STATUS_CODE -ne 200 ]
          then 
          echo "Application is not up"
          exit 1
          else 
          echo "Application is up"
          fi
          
